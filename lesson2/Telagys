{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "3a57fe51-8238-419a-87fc-2ee0ff9efb6a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "salem alem\n"
     ]
    }
   ],
   "source": [
    "print('salem alem')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "163c3e37-2622-4555-91fb-6235511a8cb8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "hello world\n"
     ]
    }
   ],
   "source": [
    "print('hello world')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "0f795cc2-8241-49a0-ac1d-2da936ab852e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4\n"
     ]
    }
   ],
   "source": [
    "print(2+2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "c98d7e6b-ccbd-4816-beaa-597a294a02bc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "20\n"
     ]
    }
   ],
   "source": [
    "print(2+2*9)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "68372083-3ab0-4627-942f-c6cac811770a",
   "metadata": {},
   "outputs": [],
   "source": [
    "i = 10"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "628d3f1d-a362-44a6-9fcb-313276a478f4",
   "metadata": {},
   "outputs": [],
   "source": [
    "j = 20"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "8b814a7b-57c5-4f4c-8be4-797d00f30507",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "30\n"
     ]
    }
   ],
   "source": [
    "print(i+j)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "30c06bc5-60e3-4266-a681-7b669c736c1d",
   "metadata": {},
   "outputs": [],
   "source": [
    "i = 'salem'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "19dc7ad1-d57b-4add-8ec9-473c7aae187e",
   "metadata": {},
   "outputs": [],
   "source": [
    "j = 'alem'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "523facc0-1df2-4f13-9c01-95a4f1ccef92",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "salemalem\n"
     ]
    }
   ],
   "source": [
    "print(i+j)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "b2e3e6ec-d30b-4e42-a254-6d06acef0357",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "salem alem\n"
     ]
    }
   ],
   "source": [
    "print(i + ' ' + j)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "397df61f-06ca-44c9-b3ea-722b0aa2010e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "сан енгізіңіз:  5\n"
     ]
    }
   ],
   "source": [
    "user_input = input('сан енгізіңіз: ')\n",
    "number = int( user_input )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "112aef92-b943-4f7d-a4a7-2cec616a7d2a",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "945633cb-b3e2-4c79-a89f-16d6e499ff99",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "сан енгізіңіз:  5\n",
      "сан енгізіңіз:  6\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "олардық қосындысы \n",
      "11\n"
     ]
    }
   ],
   "source": [
    "user_input = input('сан енгізіңіз: ')\n",
    "number = int( user_input )\n",
    "user_input2 = input('сан енгізіңіз: ')\n",
    "number2 = int( user_input2 )\n",
    "print('олардық қосындысы ')\n",
    "print( number + number2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f5738c8b-cd09-4f32-9f12-253a7279faaa",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "b652715d-8c76-49bc-8e65-059d44d2e29d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "сан енгізіңіз:  5\n",
      "таңба енгізіңіз +\n",
      "сан енгізіңіз:  6\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "11\n"
     ]
    }
   ],
   "source": [
    "user_input = input( 'сан енгізіңіз: ' )\n",
    "number = int( user_input )\n",
    "user_input3 = input( 'таңба енгізіңіз' )\n",
    "user_input2 = input( 'сан енгізіңіз: ' )\n",
    "number2 = int( user_input2 )\n",
    "if( user_input3 == '+' ):\n",
    "    print(number + number2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "2ccd0ab1-f575-4bbe-8acb-2ad7eea4d99b",
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (2184130051.py, line 2)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;36m  Cell \u001b[1;32mIn[35], line 2\u001b[1;36m\u001b[0m\n\u001b[1;33m    //sefsefsef\u001b[0m\n\u001b[1;37m    ^\u001b[0m\n\u001b[1;31mSyntaxError\u001b[0m\u001b[1;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "if ():\n",
    "    //sefsefsef\n",
    "elif ():\n",
    "    //rthtrhtrh\n",
    "else:\n",
    "    //ysefojoeo"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "a71dd3ff-5b64-485e-8aaa-3d9aa829ffd0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "alma\n",
      "almurt\n",
      "banan\n"
     ]
    }
   ],
   "source": [
    "sunduk = [ 'alma', 'almurt', 'banan' ]\n",
    "for veshi in sunduk:\n",
    "    print ( veshi )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a43b8ab6-86be-481c-9dfb-a1845c329134",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cbdfa561-a097-4ab2-a71c-def45bf56653",
   "metadata": {},
   "outputs": [],
   "source": [
    "for i in range( 1000 ):\n",
    "    user_input = input( 'сан енгізіңіз: ' )\n",
    "    number = int( user_input )\n",
    "    user_input3 = input( 'таңба енгізіңіз' )\n",
    "    user_input2 = input( 'сан енгізіңіз: ' )\n",
    "    number2 = int( user_input2 )\n",
    "    if( user_input3 == '+' ):\n",
    "        print(number + number2)    \n",
    "    elif( user_input3 == '-' ):\n",
    "        print(number - number2)\n",
    "    elif( user_input3 == '*' ):\n",
    "        print(number * number2)\n",
    "    elif( user_input3 == '/' ):\n",
    "        print(number / number2)\n",
    "    elif( user_input3 == '!' or user_input2 == '!' or uses_input == '!' ):\n",
    "        break"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "ea40efb5-ab84-43d7-ab91-f4c70fd77ee5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "сан енгізіңіз:  5\n",
      "таңба енгізіңіз +\n",
      "сан енгізіңіз:  6\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "11\n"
     ]
    }
   ],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d97cd17a-21be-4f4b-a32c-3a541d45537f",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
